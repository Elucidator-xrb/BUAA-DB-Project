# Generated by Django 4.1.1 on 2022-12-24 13:57

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountApproveQueue',
            fields=[
                ('CodeName', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='CodeName')),
                ('Password', models.CharField(max_length=20, verbose_name='Password')),
                ('Permission', models.IntegerField(default=3, verbose_name='Permission')),
                ('Class', models.CharField(max_length=20, verbose_name='Class')),
                ('Region', models.CharField(max_length=30, verbose_name='Region')),
                ('Race', models.CharField(max_length=20, verbose_name='Race')),
                ('Description', models.TextField(default='', verbose_name='Description')),
            ],
            options={
                'db_table': 'account_approve_queue',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('Gid', models.AutoField(primary_key=True, serialize=False, verbose_name='GId')),
                ('GName', models.CharField(max_length=30, verbose_name='GName')),
                ('BornTime', models.DateTimeField(auto_now=True, verbose_name='Time')),
            ],
            options={
                'db_table': 'Group',
            },
        ),
        migrations.CreateModel(
            name='Passage',
            fields=[
                ('PId', models.AutoField(primary_key=True, serialize=False, verbose_name='PId')),
                ('Title', models.CharField(max_length=45, verbose_name='Title')),
                ('Poster', models.CharField(max_length=30, verbose_name='Poster')),
                ('PostDate', models.DateTimeField(default=datetime.datetime.now, verbose_name='PostDate')),
                ('LastEditor', models.CharField(max_length=30, verbose_name='LastEditor')),
                ('LastEditTime', models.DateTimeField(auto_now=True, verbose_name='LastEditTime')),
                ('Content', models.TextField(verbose_name='Content')),
                ('Type', models.IntegerField(default=1, verbose_name='Type')),
            ],
            options={
                'db_table': 'passage',
                'ordering': ['-LastEditTime'],
            },
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('CodeName', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='CodeName')),
                ('Password', models.CharField(max_length=20, verbose_name='Password')),
                ('Permission', models.PositiveSmallIntegerField(verbose_name='Permission')),
                ('Mail', models.CharField(default='', max_length=20, verbose_name='Mail')),
            ],
            options={
                'db_table': 'user_account',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('CodeName', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='CodeName')),
                ('Gender', models.IntegerField(choices=[(0, 'male'), (1, 'female')], verbose_name='Gender')),
                ('Class', models.CharField(max_length=20, verbose_name='Class')),
                ('Region', models.CharField(max_length=30, verbose_name='Region')),
                ('Race', models.CharField(max_length=20, verbose_name='Race')),
                ('Avatar', models.ImageField(null=True, upload_to='img_url', verbose_name='Avatar')),
                ('Bio', models.TextField(default='', verbose_name='Bio')),
            ],
            options={
                'db_table': 'user_profile',
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('RId', models.AutoField(primary_key=True, serialize=False, verbose_name='RId')),
                ('Content', models.TextField(verbose_name='Content')),
                ('AttachedPId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.passage')),
                ('Replier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.useraccount')),
            ],
            options={
                'db_table': 'Reply',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('MId', models.AutoField(primary_key=True, serialize=False, verbose_name='MId')),
                ('Type', models.IntegerField(choices=[(0, '个人'), (1, '群组')], verbose_name='Type')),
                ('ContextText', models.TextField(verbose_name='ContextText')),
                ('Picture', models.ImageField(null=True, upload_to='img_url', verbose_name='Picture')),
                ('Time', models.DateTimeField(auto_now=True, verbose_name='Time')),
                ('SendFrom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SendFrom', to='backend.useraccount')),
                ('SendToGroup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.group')),
                ('SendToPerson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SendToPerson', to='backend.useraccount')),
            ],
            options={
                'db_table': 'Message',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='Owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.useraccount'),
        ),
        migrations.CreateModel(
            name='OperatorGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isOwner', models.IntegerField(choices=[(0, '不是'), (1, '是')], verbose_name='isOwner')),
                ('CodeName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.useraccount')),
                ('Gid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.group')),
            ],
            options={
                'db_table': 'operator_group',
                'unique_together': {('Gid', 'CodeName')},
            },
        ),
    ]
